* {
   /* Resets the margin of all elements to 0, removing any default spacing 
      that browsers may apply */
   margin: 0;

   /* Resets the padding of all elements to 0, removing any default padding 
      that browsers may apply */
   padding: 0;

   /* Sets the font family for all elements to "Poppins", with a fallback 
      to a generic sans-serif font if "Poppins" is not available */
   font-family: "Poppins", sans-serif;
}

:root {
   --red-color: #f44336;
}

.header {
   /* Sets the minimum height of the header to 100% of the viewport height */
   min-height: 100vh;

   /* Sets the width of the header to 100% of its containing element */
   width: 100%;

   /* Applies a linear gradient overlay with a semi-transparent dark color 
       on top of the background image, which is specified next */
   background-image: linear-gradient(rgba(4, 19, 30, 0.7), rgba(4, 9, 30, 0.7)), url(images/banner.png);

   /* Centers the background image within the header */
   background-position: center;

   /* Scales the background image to cover the entire header area, 
       maintaining its aspect ratio */
   background-size: cover;

   /* Positions the header relative to its normal position, allowing 
       for absolutely positioned child elements to be positioned relative to it */
   position: relative;
}

nav {
   /* Sets the display of the nav element to flex, enabling the use of flexbox layout */
   display: flex;

   /* Adds padding of 2% on the top and bottom, and 6% on the left and right 
      of the nav element */
   padding: 2% 6%;

   /* Distributes space between flex items, placing the first item at the start 
      and the last item at the end of the nav container */
   justify-content: space-between;

   /* Aligns flex items vertically in the center of the nav container */
   align-items: center;
}

nav img {
   /* Sets the width of all images within the nav element to 150 pixels */
   width: 150px;
}

.nav-links {
   /* Allows the .nav-links element to grow and fill available space in the flex container */
   flex: 1;

   /* Aligns the text within the .nav-links element to the right */
   text-align: right;
}

.nav-links ul li {
   /* Removes the default bullet points from list items within the .nav-links */
   list-style: none;

   /* Displays list items in a horizontal line by using inline-block */
   display: inline-block;

   /* Adds padding of 8 pixels on the top and bottom, and 12 pixels on the left and right 
      to each list item */
   padding: 8px 12px;

   /* Positions the list item relative to its normal position, allowing for 
      absolutely positioned child elements to be positioned relative to it */
   position: relative;
}

.nav-links ul li a {
   /* Sets the text color of links within the list items to white */
   color: #fff;

   /* Removes the default underline from links */
   text-decoration: none;

   /* Sets the font size of the links to 13 pixels */
   font-size: 13px;
}

.nav-links ul li::after {
   /* Creates a pseudo-element after each list item in the .nav-links */
   content: '';

   /* Sets the initial width of the pseudo-element to 0%, making it invisible */
   width: 0%;

   /* Sets the height of the pseudo-element to 2 pixels */
   height: 2px;

   /* Sets the background color of the pseudo-element to a shade of red (--red-color) */
   background-color: var(--red-color);

   /* Displays the pseudo-element as a block element, allowing it to take up space */
   display: block;

   /* Centers the pseudo-element horizontally within the list item */
   margin: auto;

   /* Applies a transition effect to the width property over 0.5 seconds */
   transition: 0.5s;
}

.nav-links ul li:hover::after {
   /* On hover, expands the width of the pseudo-element to 100%, creating an underline effect */
   width: 100%;
}

.text-box {
   /* Sets the width of the text box to 90% of its containing element */
   width: 90%;

   /* Sets the text color to white */
   color: #fff;

   /* Positions the text box absolutely within its nearest positioned ancestor */
   position: absolute;

   /* Positions the top edge of the text box 50% from the top of its containing element */
   top: 50%;

   /* Positions the left edge of the text box 50% from the left of its containing element */
   left: 50%;

   /* Offsets the text box by 50% of its own width and height to center it */
   transform: translate(-50%, -50%);

   /* Centers the text horizontally within the text box */
   text-align: center;
}

.text-box h1 {
   /* Sets the font size of the h1 element within the text box to 62 pixels */
   font-size: 62px;
}

.text-box p {
   /* Sets the top and bottom margin of the paragraph to 10 pixels and 40 pixels, respectively */
   margin: 10px 0 40px;

   /* Sets the font size of the paragraph to 14 pixels */
   font-size: 14px;

   /* Sets the text color of the paragraph to white */
   color: #fff;
}

.hero-btn {
   /* Displays the button as an inline-block element */
   display: inline-block;

   /* Removes the default underline from the link */
   text-decoration: none;

   /* Sets the text color of the button to white */
   color: #fff;

   /* Adds a white border around the button */
   border: 1px solid #fff;

   /* Adds padding of 12 pixels vertically and 34 pixels horizontally inside the button */
   padding: 12px 34px;

   /* Sets the background of the button to transparent */
   background: transparent;

   /* Positions the button relative to its normal position */
   position: relative;

   /* Changes the cursor to a pointer when hovering over the button */
   cursor: pointer;
}

.hero-btn:hover {
   /* Changes the border color to a red shade when the button is hovered over */
   border: 1px solid var(--red-color);

   /* Changes the background color to a red shade when the button is hovered over */
   background: var(--red-color);

   /* Adds a transition effect for the background and border color changes over 1 second */
   transition: 1s;
}